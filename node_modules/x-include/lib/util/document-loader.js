var __ = function(document, script) {
  eval('/* \'' + (src || 'unknwon') + '\' */ ' + '__dirname = window.__dirname;__filename = window.__filename;script = window.script;__ = window.__;module = window.module;exports = window.exports;require = window.require;' + script);
};

(function() {
  var ajax = require('./ajax.js');
  var wrapping = require('./wrap-document.js');
  var document = window.document;
  var evalscript = __;
  
  function normalize(href, doc) {
    if( !href ) return href;
    var a = (doc || document).createElement('a');
    a.href = href || '';
    return a.href;
  }
  
  function createDocument(html, url) {
    var doc;
    if( !doc && document.implementation && document.implementation.createHTMLDocument ) {
      doc = document.implementation.createHTMLDocument('noname');
      doc.open();
      doc.write(html);
      doc.close();
    } else if( window.DOMParser ) {
      var parser = new DOMParser();
      doc = parser.parseFromString(html, "text/html");
      //WARN: DOMParser 로 초기화된 document 는 webkit 에서 dispatchEvent 가 먹히지 않는다. chrome/safari X, ff O
    } else if( window.ActiveXObject ) {
      doc = new ActiveXObject("htmlfile");
      doc.open();
      doc.write(html);
      doc.close();
    }
    
    if( url ) doc = wrapping(doc, url);
    return doc;
  };
  
  var wdocument = wrapping(window.document);
  function executeScript(doc, element) {
    var src = element.getAttribute('src');
    var text = element.nodeValue || element.textContent;
    var type = element.type || element.getAttribute('type');
    if( type && type.trim().toLowerCase() !== 'text/javascript' ) return;
    
    element.ownerDocument = doc;
    
    function execute(script) {
      var current = wdocument.currentScript;
      // TODO: element 를 결국 wrapping 해야 하는구만.
      wdocument.currentScript = document._currentScript = {
        src: element.src || doc.URL,
        ownerDocument: doc
      };
      evalscript(wdocument, script, doc.URL);
      wdocument.currentScript = current;
      delete document._currentScript;
    }
    
    // execute
    if( src ) {
      var async = element.getAttribute('async') !== null ? true : false;
      var charset = element.getAttribute('charset');
      
      ajax({
        url: normalize(src, doc),
        charset: charset,
        sync: !async
      }).done(function(err, text) {
        if( err ) return console.error(err);
        execute(text);
      });
    } else if( text.trim() ) {
      execute(text);
    }
  }
  
  function executeDocument(doc, listener) {
    var visit = function(el) {
      if( !el.childNodes.length ) return el;
      var children = [].slice.call(el.childNodes);
      children.forEach(function(child) {
        el.removeChild(child);
      });
      children.forEach(function(child) {
        if( listener ) listener.call(doc, child);
        
        if( child.tagName === 'SCRIPT' ) {
          el.appendChild(child);
          executeScript(doc, child);
        } else {
          el.appendChild(visit(child));
        }
      });
      return el;
    };
    visit(doc.documentElement);
  };
  
  function readyDocument(doc) {
    setTimeout(function() {
      var event = doc.createEvent('Event');
      event.initEvent('DOMContentLoaded', true, true);
      doc.dispatchEvent(event);
    }, 0);
  }
  
  function finishDocument(doc) {
    setTimeout(function() {
      var event = doc.createEvent('Event');
      event.initEvent('load', true, true);
      doc.dispatchEvent(event);
    }, 0);
  }
  
  module.exports = {
    createDocument: createDocument,
    executeScript: executeScript,
    executeDocument: executeDocument,
    readyDocument: readyDocument,
    finishDocument: finishDocument,
    load: function(options, done) {
      if( typeof options === 'string' ) options = {src:options};
      
      options.src = normalize(options.src);
      ajax({
        url: options.src,
        responseType: 'document'
      }).done(function(err, doc) {
        if( err ) return done(err);
        
        // TODO: XHR2 를 지원하지 않는 브라우저 (<=IE11)는 createDocument 를 사용하게 되는데 createElement('a') 를 통한 
        // URL normalize 에 대해 고려해야 한다. WrapDocument 의 normalize 메소드를 이용..
        
        if( typeof doc === 'string' ) doc = createDocument(text, options.src); // if IE
        if( options.evalScripts === true ) exec(doc, options.listener);
        done(null, doc);
      });
    }
  };
})();
